import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom';

import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components';

const CreatePost = () => {

  const navigate = useNavigate();
  
  //useState variables.
  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);
  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: '',
  });

  //Function to create a post when i have an image created.
  const handleSubmit = async (e) => {
    e.preventDefault();

    if(form.prompt && form.photo){
      setLoading(true);

      //We try to connect with the backend to create a post.
      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(form),
        });

        //We have a response and redirect to the home. (/)
        await response.json();
        navigate('/');
      } catch (error) {
        alert(err);
      } finally {
        setLoading(false);
      }
    }else{
      alert('Please generate an image to share with the community...');
    }
  }

  //Function to save every change of the input.
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  }

  //Function to generate a random promt for the input "Prompt".
  const handleSupriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  }

  //Function to generate image with OpenAI.
  //  This function get the information in the backend.
  const generateImage = async () => {
    if(form.prompt){
      try {
        setGeneratingImg(true);

        //We send this information to the backend.
        const response = await fetch('http://localhost:8080/api/v1/dalle', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ prompt: form.prompt }),
        });

        //We save the response in data, but, before, we converted this information to format JSON.
        const data = await response.json();

        //We update the state for the Form and we show the image generated by DALL-E.
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}`});

      } catch (error) {
        alert(error);
      }finally{
        setGeneratingImg(false);
      }
    }else{
      alert('Please enter a prompt.');
    }
  }

  return (
    <section className='max-w-7xl mx-auto flex flex-col items-center'>
      <div>
        <h1 className='font-extrabold text-[#222338] text-[26px]'>The Community Showcase</h1>
        <p className='mt-2 text-[#666e75] text-[14px] max-w[500px]'>Create imaginative and visually stunning images through DALL-E AI and share with the community</p>
      </div>

      <form action="" className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          <FormField 
            labelName='Your name'
            type='text'
            name='name'
            placeholder='John Doe'
            value={form.name}
            handleChange={handleChange}
          />
          <FormField 
            labelName='Prompt'
            type='text'
            name='prompt'
            placeholder={
              form.prompt === '' 
              ?
              'A Space Shuttle flying above Cape Town, digital art'
              :
              form.prompt
            }
            value={form.prompt}
            handleChange={handleChange}
            isSupriseMe
            handleSupriseMe={handleSupriseMe}
          />

          <div className='relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg
          focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 justify-center items-center'>
            {
              form.photo
              ?
              (
                <img 
                  src={form.photo}
                  alt={form.prompt}
                  className='w-full h-full object-contain'
                />
              )
              :
              (
                <img 
                  src={preview}
                  alt={preview}
                  className='object-contain opacity-40'
                />
              )
            }

            {
              generatingImg 
              &&
              (
                <div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)]'>
                  <Loader />
                </div>
              )
            }
          </div>
        </div>

        <div className='mt-5 flex gap-5'>
            <button 
              type='button'
              onClick={generateImage}
              className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'
            >
              {
                generatingImg
                ?
                'Generating...'
                :
                'Generate'
              }
            </button>
        </div>

        <div className='mt-10'>
              <p className='mt-2 text-[#666e75] text-[14px]'>
                One you have created the image you want, you cant share it with others in the community.
              </p>
              <button
              type='submit'
              className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'>
                {
                  loading
                  ?
                  'Sharing...'
                  :
                  'Share with the community'
                }
              </button>
        </div>
      </form>
    </section>
  )
}

export default CreatePost;